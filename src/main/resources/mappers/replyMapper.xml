<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gatheringplatform.mapper.ReplyMapper">
    <select id="getRepliesByNumber" resultType="Reply" parameterType="Long">
        SELECT post_no,
               reply_no,
               parent_reply_no,
               content,
               writer_nickname,
               writer_id,
               created_at,
               is_deleted
        FROM post_reply
        WHERE post_no = #{post_no}
        ORDER BY parent_reply_no and reply_no
    </select>
    <select id="getReplyByNumber" resultType="Reply" parameterType="Long">
        SELECT post_no,
               reply_no,
               parent_reply_no,
               content,
               writer_nickname,
               writer_id,
               created_at,
               is_deleted
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </select>
    <select id="getPostNoByNumber" resultType="Long" parameterType="Long">
        SELECT post_no
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </select>
    <select id="getReplyNoByNumber" resultType="Long" parameterType="Long">
        SELECT reply_no
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </select>
    <select id="getParentReplyNoByNumber" resultType="Long" parameterType="Long">
        SELECT parent_reply_no
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </select>
    <select id="getContentByNumber" resultType="String" parameterType="Long">
        SELECT content
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </select>
    <select id="getWriterNicknameByNumber" resultType="String" parameterType="Long">
        SELECT writer_nickname
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </select>
    <select id="getWriterIdByNumber" resultType="String" parameterType="Long">
        SELECT writer_id
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </select>
    <select id="getCreatedAtByNumber" resultType="Long" parameterType="Long">
        SELECT created_at
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{replyNo}
    </select>
    <select id="getIsDeletedByNumber" resultType="boolean" parameterType="Long">
        SELECT is_deleted
        FROM post_reply
        WHERE post_no = #{post_no}
          AND reply_no = #{replyNo}
    </select>
    <insert id="insert" parameterType="Reply">
        INSERT INTO post_reply(post_no, reply_no, parent_reply_no, content, writer_nickname, writer_id, created_at,
                               is_deleted)
        values (#{post_no},
                #{reply_no},
                #{parent_reply_no},
                #{content},
                #{writer_nickname},
                #{writer_id},
                current_timestamp(),
                false)
    </insert>
    <update id="update" parameterType="Reply">
        UPDATE post_reply
        SET content = #{content}
        WHERE post_no = #{post_no}
          AND reply_no = #{reply_no}
    </update>
    <update id="delete" parameterType="Reply"> # 삭제 기능을 soft delete로 구현
    UPDATE post_reply
    SET is_deleted = true
    WHERE post_no = #{post_no}
      AND reply_no = #{reply_no}
    </update>
</mapper>